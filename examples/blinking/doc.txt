/*
 * Copyright (C) 2022 Mesh4all <mesh4all.org>
 *
 * This file is subject to the terms and conditions of the GNU Lesser
 * General Public License v2.1. See the file LICENSE in the top level
 * directory for more details.
 */

/**
 * @defgroup    examples_blinking Blinking
 * @ingroup     examples
 * @brief       This is a led blink example to known about gpio/periph.h
 * @author      xkevin190 <kevinvelasco190@gmail.com>

\section led External Led Blink

## Table of Contents {#blinking_toc}

1. [Hardware](#blinking_hardware)
2. [Getting Started](#blinking_basic)
3. [Flashing the Device](#blinking_flashing)

## Hardware {#blinking_hardware}

This section shows, which pin is used in this example.

<center>
Function        | GPIOs  | Remarks |
:---------------|:-------|:--------|
LED_PIN | GPIO(PA , 19)| Pin to blink control of led |

</center>
## Getting Started {#blinking_basic}

To understand how to make a gpio_pin use digital Output. Import the periph/gpio.h library.
You could use two functions to set digital output 1 or 0.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{.c}
gpio_write(gpio, digital_state);
/*
 * gpio : refers to a digital pin that could be act with two states HIGH and LOW
 * digital_state: this could be 1 (HIGH) or 0 (LOW).
 */
gpio_toggle(gpio);
/*
 * gpio: refers to digital pin
 *
 */
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The difference between both functions it's that gpio_write does the change manually, instead gpio_toggle()
changes the value of current state. (means if is HIGH, when applied this function will be set to LOW).

another aspect to be take into account is add the xtimer and ztimer headers files, to use temporizers in our code.

## Flashing {#blinking_flashing}

If you want to upload the example to your board, needs to compile first, additional to this you could initialize the terminal and watch the results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make -C examples/blinking flash term
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[Back to table of contents](#blinking_toc)
 */
